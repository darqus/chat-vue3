rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /messages/{message} {
      // Разрешить чтение только авторизованным пользователям
      allow read: if request.auth != null;

      // Разрешить создание и обновление с ограничениями
      allow create, update: if
        // Только авторизованные пользователи
        request.auth != null
        // Сообщение должно быть строкой
        && request.resource.data.text is string
        // Минимальная длина сообщения - 1 символ
        && request.resource.data.text.size() > 0
        // Максимальная длина сообщения - 1000 символов
        && request.resource.data.text.size() < 1000
        // UID должен соответствовать авторизованному пользователю
        && request.resource.data.uid == request.auth.uid
        // Проверяем displayName если он присутствует
        && (
          !('displayName' in request.resource.data) ||
          (request.resource.data.displayName is string && request.resource.data.displayName.size() > 0)
        )
        // Проверяем senderId для новой структуры сообщений
        && (
          !('senderId' in request.resource.data) ||
          request.resource.data.senderId == request.auth.uid
        );

      // Разрешить удаление только своих сообщений
      allow delete: if request.auth != null &&
        (request.auth.uid == resource.data.uid || request.auth.uid == resource.data.senderId);
    }

    // Правила для коллекции typingStatus
    match /typingStatus/{userId} {
      // Разрешить чтение всем авторизованным пользователям
      allow read: if request.auth != null;

      // Разрешить запись только для своего документа
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Правила для коллекции users
    match /users/{userId} {
      // Разрешить чтение всем авторизованным пользователям
      allow read: if request.auth != null;

      // Разрешить создание и обновление только своего профиля
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Правила для коллекции chats
    match /chats/{chatId} {
      // Разрешить чтение только участникам чата
      allow read: if request.auth != null &&
        request.auth.uid in resource.data.participants;

      // Разрешить создание и обновление только участникам чата
      allow create, update: if request.auth != null &&
        request.auth.uid in request.resource.data.participants;

      // Разрешить удаление только участникам чата
      allow delete: if request.auth != null &&
        request.auth.uid in resource.data.participants;
    }
  }
}
